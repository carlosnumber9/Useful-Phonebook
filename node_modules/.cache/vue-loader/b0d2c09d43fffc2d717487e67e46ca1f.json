{"remainingRequest":"D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\src\\components\\ContactList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\src\\components\\ContactList.vue","mtime":1572396234958},{"path":"D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Documentos\\Drive\\Trabajo\\workspaces\\Email Meter code test\\phonebook-number9\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios';\r\nimport randomGenerator from 'random-profile-generator';\r\nimport ContactContainer from '../fragments/ContactContainer';\r\n\r\nconst JSON_SERVER_ADDRESS = 'http://localhost:8000';\r\nconst DEFAULT_CONTACT_LIST_SIZE = 5;\r\nconst DEFAULT_ITEMS_PER_PAGE = Math.abs(Math.random() * (0 - 10));\r\n\r\nexport default {\r\n    name: 'ContactList',\r\n    components: {\r\n        ContactContainer\r\n    },\r\n    data() {\r\n        return {\r\n            contacts: []\r\n        }\r\n    },\r\n    methods: {\r\n        generateRandomUsers() {\r\n            var i;\r\n            var randomUsers = [];\r\n            for (i = 0; i < DEFAULT_CONTACT_LIST_SIZE; i++) {\r\n                randomUsers.push(randomGenerator.profile());\r\n            }\r\n            return randomUsers;\r\n        },\r\n        async clearDatabase() {\r\n            var dbData = [];\r\n            await axios.get(JSON_SERVER_ADDRESS + '/contacts')\r\n                .then(response => dbData = response.data);\r\n            dbData.map(async contactToRemove => {\r\n                await axios.delete(JSON_SERVER_ADDRESS + '/contacts/' + contactToRemove.id)\r\n                    .then(response => console.log(response));\r\n            });\r\n        },\r\n        addToDatabase(newContacts) {\r\n            newContacts.map(async newContact => {\r\n                await axios.post(JSON_SERVER_ADDRESS + '/contacts', newContact);\r\n            });\r\n        },\r\n        async getContacts() {\r\n            var dbData;\r\n            await axios.get(JSON_SERVER_ADDRESS + '/contacts')\r\n                .then(response => dbData = response.data);\r\n            return dbData;\r\n        },\r\n        async init(generateContacts) {\r\n            await this.clearDatabase();\r\n            var newRandomUsers = this.generateRandomUsers();\r\n            await this.addToDatabase(newRandomUsers);\r\n            this.contacts = await this.getContacts();\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.contacts = await this.getContacts();\r\n\r\n    }\r\n}\r\n",{"version":3,"sources":["ContactList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ContactList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div class=\"list\">\r\n    <p class=\"more-info\"> Click on a contact to see more info. </p>\r\n    <ul>\r\n        <!-- eslint-disable-next-line -->\r\n        <li v-for=\"contact in contacts\">\r\n            <router-link :to=\"{ name: 'contact', params: {id: contact.id } }\">\r\n                <contactContainer v-bind:contact=\"contact\"> </contactContainer>\r\n            </router-link>\r\n        </li>\r\n    </ul>\r\n    <div class=\"buttons\">\r\n        <a class=\"button\" @click=\"init\"> Generate new random contacts </a>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport randomGenerator from 'random-profile-generator';\r\nimport ContactContainer from '../fragments/ContactContainer';\r\n\r\nconst JSON_SERVER_ADDRESS = 'http://localhost:8000';\r\nconst DEFAULT_CONTACT_LIST_SIZE = 5;\r\nconst DEFAULT_ITEMS_PER_PAGE = Math.abs(Math.random() * (0 - 10));\r\n\r\nexport default {\r\n    name: 'ContactList',\r\n    components: {\r\n        ContactContainer\r\n    },\r\n    data() {\r\n        return {\r\n            contacts: []\r\n        }\r\n    },\r\n    methods: {\r\n        generateRandomUsers() {\r\n            var i;\r\n            var randomUsers = [];\r\n            for (i = 0; i < DEFAULT_CONTACT_LIST_SIZE; i++) {\r\n                randomUsers.push(randomGenerator.profile());\r\n            }\r\n            return randomUsers;\r\n        },\r\n        async clearDatabase() {\r\n            var dbData = [];\r\n            await axios.get(JSON_SERVER_ADDRESS + '/contacts')\r\n                .then(response => dbData = response.data);\r\n            dbData.map(async contactToRemove => {\r\n                await axios.delete(JSON_SERVER_ADDRESS + '/contacts/' + contactToRemove.id)\r\n                    .then(response => console.log(response));\r\n            });\r\n        },\r\n        addToDatabase(newContacts) {\r\n            newContacts.map(async newContact => {\r\n                await axios.post(JSON_SERVER_ADDRESS + '/contacts', newContact);\r\n            });\r\n        },\r\n        async getContacts() {\r\n            var dbData;\r\n            await axios.get(JSON_SERVER_ADDRESS + '/contacts')\r\n                .then(response => dbData = response.data);\r\n            return dbData;\r\n        },\r\n        async init(generateContacts) {\r\n            await this.clearDatabase();\r\n            var newRandomUsers = this.generateRandomUsers();\r\n            await this.addToDatabase(newRandomUsers);\r\n            this.contacts = await this.getContacts();\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.contacts = await this.getContacts();\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n    margin: 40px 0 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\nli {\r\n    margin: 0 10px;\r\n}\r\n\r\na {\r\n    color: #42b983;\r\n}\r\n\r\n.list:hover>.more-info {\r\n    opacity: 1;\r\n    transition: 1s ease-in-out;\r\n}\r\n\r\n.more-info {\r\n    opacity: 0;\r\n    transition: 1s ease-in-out;\r\n}\r\n\r\n.button {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  color: black;\r\n  padding: 4px;\r\n  border: 1px solid lightgray;\r\n  background-color: #95f9e3;\r\n  -webkit-border-radius: 8px;\r\n    -moz-border-radius: 8px;\r\n    border-radius: 8px;\r\n      transition: 0.2s ease-in-out;\r\n      margin: 5px;\r\n}\r\n\r\n.button:hover {\r\n  background-color: lightgreen;\r\n  transition: 0.2s ease-in-out;\r\n}\r\n</style>\r\n"]}]}